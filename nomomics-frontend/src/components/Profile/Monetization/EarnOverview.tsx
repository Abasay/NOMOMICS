// components/BalanceOverview.tsx
import React from 'react';

interface BalanceOverviewProps {
	cashAmount: number;
	tokenAmount: number;
	coinAmount: number;
}

const BalanceOverview: React.FC<BalanceOverviewProps> = ({
	cashAmount,
	tokenAmount,
	coinAmount,
}) => {
	return (
		<div className='p-6 py-12 bg-white rounded-lg min-w-[400px] max-w-[500px] shadow-md'>
			{/* Top Cards */}
			<div className='grid min-w-min grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-8'>
				<div className='flex items-center justify-center p-4 bg-blue-500 text-white rounded-lg shadow'>
					<div className='flex gap-2 min-w-24 items-center justify-center font-inter'>
						<span>
							<svg
								width='40'
								height='40'
								viewBox='0 0 40 40'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									d='M20 13.4844C16.9438 13.4844 14.1781 14.0281 12.2127 14.8766C11.2306 15.3031 10.4516 15.8047 9.93594 16.3344C9.42031 16.8641 9.17188 17.3937 9.17188 17.9375C9.17188 18.4812 9.42031 19.0109 9.93594 19.5406C10.4516 20.0703 11.2306 20.5719 12.2127 20.9984C14.1781 21.8469 16.9438 22.3906 20 22.3906C23.0562 22.3906 25.8219 21.8469 27.7859 20.9984C28.7703 20.5719 29.5484 20.0703 30.0641 19.5406C30.5797 19.0109 30.8281 18.4812 30.8281 17.9375C30.8281 17.3937 30.5797 16.8641 30.0641 16.3344C29.5484 15.8047 28.7703 15.3031 27.7859 14.8766C25.8219 14.0281 23.0562 13.4844 20 13.4844ZM9.17188 19.9578V22.3109C9.17188 22.6062 9.42031 23.1359 9.93594 23.6656C10.4516 24.1953 11.2306 24.6969 12.2127 25.1234C14.1781 25.9719 16.9438 26.5156 20 26.5156C23.0562 26.5156 25.8219 25.9719 27.7859 25.1234C28.7703 24.6969 29.5484 24.1953 30.0641 23.6656C30.5797 23.1359 30.8281 22.6062 30.8281 22.3109V19.9578C30.7766 20.0188 30.725 20.075 30.6688 20.1312C30.0453 20.7687 29.1781 21.3172 28.1234 21.7719C26.0141 22.6859 23.1547 23.2344 20 23.2344C16.8453 23.2344 13.9859 22.6859 11.8775 21.7719C10.8233 21.3172 9.95516 20.7687 9.33219 20.1312C9.27641 20.075 9.22344 20.0141 9.17188 19.9578Z'
									fill='black'
								/>
								<circle
									cx='20'
									cy='20'
									r='20'
									fill='white'
								/>
								<path
									d='M10 19L12.807 15.843C13.1823 15.4207 13.6428 15.0827 14.1581 14.8512C14.6735 14.6197 15.232 14.5 15.797 14.5H16M10 27.5H15.5L19.5 24.5C19.5 24.5 20.31 23.953 21.5 23C24 21 21.5 17.834 19 19.5C16.964 20.857 15 22 15 22'
									stroke='black'
									strokeWidth='1.5'
									strokeLinecap='round'
									strokeLinejoin='round'
								/>
								<path
									d='M16 21.5V15C16 14.4696 16.2107 13.9609 16.5858 13.5858C16.9609 13.2107 17.4696 13 18 13H28C28.5304 13 29.0391 13.2107 29.4142 13.5858C29.7893 13.9609 30 14.4696 30 15V21C30 21.5304 29.7893 22.0391 29.4142 22.4142C29.0391 22.7893 28.5304 23 28 23H21.5'
									stroke='black'
									strokeWidth='1.5'
								/>
								<path
									d='M27.5 18.01L27.51 17.999M18.5 18.01L18.51 17.999M23 20C22.4696 20 21.9609 19.7893 21.5858 19.4142C21.2107 19.0391 21 18.5304 21 18C21 17.4696 21.2107 16.9609 21.5858 16.5858C21.9609 16.2107 22.4696 16 23 16C23.5304 16 24.0391 16.2107 24.4142 16.5858C24.7893 16.9609 25 17.4696 25 18C25 18.5304 24.7893 19.0391 24.4142 19.4142C24.0391 19.7893 23.5304 20 23 20Z'
									stroke='black'
									strokeWidth='1.5'
									strokeLinecap='round'
									strokeLinejoin='round'
								/>
							</svg>
						</span>
						<div>
							<div className='max-480:text-sm max-md:text-xl text-2xl font-medium '>
								Cash
							</div>
							<div className='max-480:text-xs max-md:text-sm text-lg font-semibold'>
								{cashAmount.toLocaleString()}
							</div>
						</div>
					</div>
				</div>

				<div className='flex items-center justify-center p-4 bg-orange-500 text-white rounded-lg shadow'>
					<div className='flex gap-2 items-center justify-center font-inter'>
						<span>
							<svg
								width='40'
								height='40'
								viewBox='0 0 40 40'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									d='M20 29.4241L11.5 24.7131V15.2901L20 10.5781L28.5 15.2901V24.7131L20 29.4241ZM17.196 17.8671C17.5407 17.4411 17.9567 17.1071 18.444 16.8651C18.9313 16.6231 19.45 16.5018 20 16.5011C20.55 16.5005 21.0687 16.6218 21.556 16.8651C22.0433 17.1085 22.4593 17.4421 22.804 17.8661L26.919 15.5761L20 11.7241L13.08 15.5761L17.196 17.8671ZM19.5 27.9971V23.4921C18.6387 23.3355 17.9233 22.9308 17.354 22.2781C16.7847 21.6255 16.5 20.8665 16.5 20.0011C16.5 19.7791 16.518 19.5698 16.554 19.3731C16.59 19.1765 16.6457 18.9755 16.721 18.7701L12.5 16.4051V24.1151L19.5 27.9971ZM20 22.5011C20.704 22.5011 21.2967 22.2605 21.778 21.7791C22.2593 21.2978 22.5 20.7051 22.5 20.0011C22.5 19.2971 22.2593 18.7045 21.778 18.2231C21.2967 17.7418 20.704 17.5011 20 17.5011C19.296 17.5011 18.7033 17.7418 18.222 18.2231C17.7407 18.7045 17.5 19.2971 17.5 20.0011C17.5 20.7051 17.7407 21.2978 18.222 21.7791C18.7033 22.2605 19.296 22.5011 20 22.5011ZM20.5 27.9971L27.5 24.1151V16.4051L23.279 18.7701C23.3543 18.9755 23.41 19.1765 23.446 19.3731C23.482 19.5698 23.5 19.7791 23.5 20.0011C23.5 20.8665 23.2153 21.6255 22.646 22.2781C22.0767 22.9308 21.3613 23.3355 20.5 23.4921V27.9971Z'
									fill='black'
								/>
								<circle
									cx='20'
									cy='20'
									r='20'
									fill='white'
								/>
								<path
									d='M20 29.4241L11.5 24.7131V15.2901L20 10.5781L28.5 15.2901V24.7131L20 29.4241ZM17.196 17.8671C17.5407 17.4411 17.9567 17.1071 18.444 16.8651C18.9313 16.6231 19.45 16.5018 20 16.5011C20.55 16.5005 21.0687 16.6218 21.556 16.8651C22.0433 17.1085 22.4593 17.4421 22.804 17.8661L26.919 15.5761L20 11.7241L13.08 15.5761L17.196 17.8671ZM19.5 27.9971V23.4921C18.6387 23.3355 17.9233 22.9308 17.354 22.2781C16.7847 21.6255 16.5 20.8665 16.5 20.0011C16.5 19.7791 16.518 19.5698 16.554 19.3731C16.59 19.1765 16.6457 18.9755 16.721 18.7701L12.5 16.4051V24.1151L19.5 27.9971ZM20 22.5011C20.704 22.5011 21.2967 22.2605 21.778 21.7791C22.2593 21.2978 22.5 20.7051 22.5 20.0011C22.5 19.2971 22.2593 18.7045 21.778 18.2231C21.2967 17.7418 20.704 17.5011 20 17.5011C19.296 17.5011 18.7033 17.7418 18.222 18.2231C17.7407 18.7045 17.5 19.2971 17.5 20.0011C17.5 20.7051 17.7407 21.2978 18.222 21.7791C18.7033 22.2605 19.296 22.5011 20 22.5011ZM20.5 27.9971L27.5 24.1151V16.4051L23.279 18.7701C23.3543 18.9755 23.41 19.1765 23.446 19.3731C23.482 19.5698 23.5 19.7791 23.5 20.0011C23.5 20.8665 23.2153 21.6255 22.646 22.2781C22.0767 22.9308 21.3613 23.3355 20.5 23.4921V27.9971Z'
									fill='black'
								/>
							</svg>
						</span>
					</div>
					<div className='text-center'>
						<div className='max-480:text-sm max-md:text-xl text-2xl font-medium '>
							Tokens
						</div>
						<div className='max-480:text-xs max-md:text-sm text-lg font-semibold'>
							{tokenAmount.toLocaleString()}
						</div>
					</div>
				</div>

				<div className='flex items-center justify-center p-4 bg-primary text-white rounded-lg shadow'>
					<div className='flex gap-2 items-center justify-center font-inter'>
						<span>
							<svg
								width='40'
								height='40'
								viewBox='0 0 40 40'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									d='M20 29.4241L11.5 24.7131V15.2901L20 10.5781L28.5 15.2901V24.7131L20 29.4241ZM17.196 17.8671C17.5407 17.4411 17.9567 17.1071 18.444 16.8651C18.9313 16.6231 19.45 16.5018 20 16.5011C20.55 16.5005 21.0687 16.6218 21.556 16.8651C22.0433 17.1085 22.4593 17.4421 22.804 17.8661L26.919 15.5761L20 11.7241L13.08 15.5761L17.196 17.8671ZM19.5 27.9971V23.4921C18.6387 23.3355 17.9233 22.9308 17.354 22.2781C16.7847 21.6255 16.5 20.8665 16.5 20.0011C16.5 19.7791 16.518 19.5698 16.554 19.3731C16.59 19.1765 16.6457 18.9755 16.721 18.7701L12.5 16.4051V24.1151L19.5 27.9971ZM20 22.5011C20.704 22.5011 21.2967 22.2605 21.778 21.7791C22.2593 21.2978 22.5 20.7051 22.5 20.0011C22.5 19.2971 22.2593 18.7045 21.778 18.2231C21.2967 17.7418 20.704 17.5011 20 17.5011C19.296 17.5011 18.7033 17.7418 18.222 18.2231C17.7407 18.7045 17.5 19.2971 17.5 20.0011C17.5 20.7051 17.7407 21.2978 18.222 21.7791C18.7033 22.2605 19.296 22.5011 20 22.5011ZM20.5 27.9971L27.5 24.1151V16.4051L23.279 18.7701C23.3543 18.9755 23.41 19.1765 23.446 19.3731C23.482 19.5698 23.5 19.7791 23.5 20.0011C23.5 20.8665 23.2153 21.6255 22.646 22.2781C22.0767 22.9308 21.3613 23.3355 20.5 23.4921V27.9971Z'
									fill='black'
								/>
								<path
									d='M20 29.4241L11.5 24.7131V15.2901L20 10.5781L28.5 15.2901V24.7131L20 29.4241ZM17.196 17.8671C17.5407 17.4411 17.9567 17.1071 18.444 16.8651C18.9313 16.6231 19.45 16.5018 20 16.5011C20.55 16.5005 21.0687 16.6218 21.556 16.8651C22.0433 17.1085 22.4593 17.4421 22.804 17.8661L26.919 15.5761L20 11.7241L13.08 15.5761L17.196 17.8671ZM19.5 27.9971V23.4921C18.6387 23.3355 17.9233 22.9308 17.354 22.2781C16.7847 21.6255 16.5 20.8665 16.5 20.0011C16.5 19.7791 16.518 19.5698 16.554 19.3731C16.59 19.1765 16.6457 18.9755 16.721 18.7701L12.5 16.4051V24.1151L19.5 27.9971ZM20 22.5011C20.704 22.5011 21.2967 22.2605 21.778 21.7791C22.2593 21.2978 22.5 20.7051 22.5 20.0011C22.5 19.2971 22.2593 18.7045 21.778 18.2231C21.2967 17.7418 20.704 17.5011 20 17.5011C19.296 17.5011 18.7033 17.7418 18.222 18.2231C17.7407 18.7045 17.5 19.2971 17.5 20.0011C17.5 20.7051 17.7407 21.2978 18.222 21.7791C18.7033 22.2605 19.296 22.5011 20 22.5011ZM20.5 27.9971L27.5 24.1151V16.4051L23.279 18.7701C23.3543 18.9755 23.41 19.1765 23.446 19.3731C23.482 19.5698 23.5 19.7791 23.5 20.0011C23.5 20.8665 23.2153 21.6255 22.646 22.2781C22.0767 22.9308 21.3613 23.3355 20.5 23.4921V27.9971Z'
									fill='black'
								/>
								<circle
									cx='20'
									cy='20'
									r='20'
									fill='white'
								/>
								<path
									d='M20 13.4844C16.9438 13.4844 14.1781 14.0281 12.2127 14.8766C11.2306 15.3031 10.4516 15.8047 9.93594 16.3344C9.42031 16.8641 9.17188 17.3937 9.17188 17.9375C9.17188 18.4812 9.42031 19.0109 9.93594 19.5406C10.4516 20.0703 11.2306 20.5719 12.2127 20.9984C14.1781 21.8469 16.9438 22.3906 20 22.3906C23.0562 22.3906 25.8219 21.8469 27.7859 20.9984C28.7703 20.5719 29.5484 20.0703 30.0641 19.5406C30.5797 19.0109 30.8281 18.4812 30.8281 17.9375C30.8281 17.3937 30.5797 16.8641 30.0641 16.3344C29.5484 15.8047 28.7703 15.3031 27.7859 14.8766C25.8219 14.0281 23.0562 13.4844 20 13.4844ZM9.17188 19.9578V22.3109C9.17188 22.6062 9.42031 23.1359 9.93594 23.6656C10.4516 24.1953 11.2306 24.6969 12.2127 25.1234C14.1781 25.9719 16.9438 26.5156 20 26.5156C23.0562 26.5156 25.8219 25.9719 27.7859 25.1234C28.7703 24.6969 29.5484 24.1953 30.0641 23.6656C30.5797 23.1359 30.8281 22.6062 30.8281 22.3109V19.9578C30.7766 20.0188 30.725 20.075 30.6688 20.1312C30.0453 20.7687 29.1781 21.3172 28.1234 21.7719C26.0141 22.6859 23.1547 23.2344 20 23.2344C16.8453 23.2344 13.9859 22.6859 11.8775 21.7719C10.8233 21.3172 9.95516 20.7687 9.33219 20.1312C9.27641 20.075 9.22344 20.0141 9.17188 19.9578Z'
									fill='black'
								/>
							</svg>
						</span>
					</div>
					<div className='text-center'>
						<div className='max-480:text-sm max-md:text-xl text-2xl font-medium '>
							Coins
						</div>
						<div className='max-480:text-xs max-md:text-sm text-lg font-semibold'>
							{coinAmount.toLocaleString()}
						</div>
					</div>
				</div>
			</div>

			{/* Progress Bars */}
			<div className='space-y-4'>
				<div>
					<div className='flex justify-between gap-5 items-center mb-1'>
						<span className=''>Cash</span>
						<div className='w-full bg-gray-200 rounded-full h-2.5'>
							<div
								className='bg-blue-500 h-2.5 w-full rounded-full'
								// style={{
								//     width: `${(cashAmount / 35000) * 100}%`,
								// }}
							></div>
						</div>
						<span className=' w-full'>
							{(
								cashAmount /
								1000
							).toFixed(0)}
							k
						</span>
					</div>
				</div>

				<div>
					<div className='flex justify-between gap-5 mb-1'>
						<span>Token</span>
						<div className='w-full bg-gray-200 rounded-r-full h-2.5'>
							<div
								className='bg-orange-500 h-2.5 w-full rounded-r-full'
								// style={{ width: `${(tokenAmount / 5000) * 100}%` }}
							></div>
						</div>
						<span className=' w-full'>
							{(
								tokenAmount /
								1000
							).toFixed(0)}
							k
						</span>
					</div>
				</div>

				<div className=''>
					<div className='flex justify-between gap-5 mb-1'>
						<span className=''>Coins</span>

						<div className=' bg-gray-200 w-full rounded-r-full h-2.5'>
							<div
								className='bg-yellow-500 w-full h-2.5 rounded-r-full'
								style={
									{
										// width: `${(coinAmount / 35000) * 100}%`,
									}
								}
							></div>
						</div>
						<span className=' w-full '>
							{(
								coinAmount /
								1000
							).toFixed(0)}
							k
						</span>
					</div>
				</div>
			</div>
		</div>
	);
};

export default BalanceOverview;
